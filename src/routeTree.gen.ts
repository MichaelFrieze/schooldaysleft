/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as landingRouteRouteImport } from './routes/(landing)/route'
import { Route as countdownRouteRouteImport } from './routes/(countdown)/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as landingIndexRouteImport } from './routes/(landing)/index'
import { Route as countdownDashboardIndexRouteImport } from './routes/(countdown)/dashboard/index'
import { Route as authSignUpSplatRouteImport } from './routes/(auth)/sign-up.$'
import { Route as authSignInSplatRouteImport } from './routes/(auth)/sign-in.$'
import { Route as countdownCountdownNewIndexRouteImport } from './routes/(countdown)/countdown/new/index'
import { Route as countdownCountdownCountdownIdIndexRouteImport } from './routes/(countdown)/countdown/$countdownId/index'
import { Route as countdownCountdownCountdownIdEditIndexRouteImport } from './routes/(countdown)/countdown/$countdownId/edit/index'

const landingRouteRoute = landingRouteRouteImport.update({
  id: '/(landing)',
  getParentRoute: () => rootRouteImport,
} as any)
const countdownRouteRoute = countdownRouteRouteImport.update({
  id: '/(countdown)',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const landingIndexRoute = landingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => landingRouteRoute,
} as any)
const countdownDashboardIndexRoute = countdownDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => countdownRouteRoute,
} as any)
const authSignUpSplatRoute = authSignUpSplatRouteImport.update({
  id: '/sign-up/$',
  path: '/sign-up/$',
  getParentRoute: () => authRouteRoute,
} as any)
const authSignInSplatRoute = authSignInSplatRouteImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => authRouteRoute,
} as any)
const countdownCountdownNewIndexRoute =
  countdownCountdownNewIndexRouteImport.update({
    id: '/countdown/new/',
    path: '/countdown/new/',
    getParentRoute: () => countdownRouteRoute,
  } as any)
const countdownCountdownCountdownIdIndexRoute =
  countdownCountdownCountdownIdIndexRouteImport.update({
    id: '/countdown/$countdownId/',
    path: '/countdown/$countdownId/',
    getParentRoute: () => countdownRouteRoute,
  } as any)
const countdownCountdownCountdownIdEditIndexRoute =
  countdownCountdownCountdownIdEditIndexRouteImport.update({
    id: '/countdown/$countdownId/edit/',
    path: '/countdown/$countdownId/edit/',
    getParentRoute: () => countdownRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof landingIndexRoute
  '/sign-in/$': typeof authSignInSplatRoute
  '/sign-up/$': typeof authSignUpSplatRoute
  '/dashboard': typeof countdownDashboardIndexRoute
  '/countdown/$countdownId': typeof countdownCountdownCountdownIdIndexRoute
  '/countdown/new': typeof countdownCountdownNewIndexRoute
  '/countdown/$countdownId/edit': typeof countdownCountdownCountdownIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof landingIndexRoute
  '/sign-in/$': typeof authSignInSplatRoute
  '/sign-up/$': typeof authSignUpSplatRoute
  '/dashboard': typeof countdownDashboardIndexRoute
  '/countdown/$countdownId': typeof countdownCountdownCountdownIdIndexRoute
  '/countdown/new': typeof countdownCountdownNewIndexRoute
  '/countdown/$countdownId/edit': typeof countdownCountdownCountdownIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)': typeof authRouteRouteWithChildren
  '/(countdown)': typeof countdownRouteRouteWithChildren
  '/(landing)': typeof landingRouteRouteWithChildren
  '/(landing)/': typeof landingIndexRoute
  '/(auth)/sign-in/$': typeof authSignInSplatRoute
  '/(auth)/sign-up/$': typeof authSignUpSplatRoute
  '/(countdown)/dashboard/': typeof countdownDashboardIndexRoute
  '/(countdown)/countdown/$countdownId/': typeof countdownCountdownCountdownIdIndexRoute
  '/(countdown)/countdown/new/': typeof countdownCountdownNewIndexRoute
  '/(countdown)/countdown/$countdownId/edit/': typeof countdownCountdownCountdownIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/dashboard'
    | '/countdown/$countdownId'
    | '/countdown/new'
    | '/countdown/$countdownId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/dashboard'
    | '/countdown/$countdownId'
    | '/countdown/new'
    | '/countdown/$countdownId/edit'
  id:
    | '__root__'
    | '/(auth)'
    | '/(countdown)'
    | '/(landing)'
    | '/(landing)/'
    | '/(auth)/sign-in/$'
    | '/(auth)/sign-up/$'
    | '/(countdown)/dashboard/'
    | '/(countdown)/countdown/$countdownId/'
    | '/(countdown)/countdown/new/'
    | '/(countdown)/countdown/$countdownId/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  countdownRouteRoute: typeof countdownRouteRouteWithChildren
  landingRouteRoute: typeof landingRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(landing)': {
      id: '/(landing)'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof landingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(countdown)': {
      id: '/(countdown)'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof countdownRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(landing)/': {
      id: '/(landing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingIndexRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/(countdown)/dashboard/': {
      id: '/(countdown)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof countdownDashboardIndexRouteImport
      parentRoute: typeof countdownRouteRoute
    }
    '/(auth)/sign-up/$': {
      id: '/(auth)/sign-up/$'
      path: '/sign-up/$'
      fullPath: '/sign-up/$'
      preLoaderRoute: typeof authSignUpSplatRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/sign-in/$': {
      id: '/(auth)/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof authSignInSplatRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(countdown)/countdown/new/': {
      id: '/(countdown)/countdown/new/'
      path: '/countdown/new'
      fullPath: '/countdown/new'
      preLoaderRoute: typeof countdownCountdownNewIndexRouteImport
      parentRoute: typeof countdownRouteRoute
    }
    '/(countdown)/countdown/$countdownId/': {
      id: '/(countdown)/countdown/$countdownId/'
      path: '/countdown/$countdownId'
      fullPath: '/countdown/$countdownId'
      preLoaderRoute: typeof countdownCountdownCountdownIdIndexRouteImport
      parentRoute: typeof countdownRouteRoute
    }
    '/(countdown)/countdown/$countdownId/edit/': {
      id: '/(countdown)/countdown/$countdownId/edit/'
      path: '/countdown/$countdownId/edit'
      fullPath: '/countdown/$countdownId/edit'
      preLoaderRoute: typeof countdownCountdownCountdownIdEditIndexRouteImport
      parentRoute: typeof countdownRouteRoute
    }
  }
}

interface authRouteRouteChildren {
  authSignInSplatRoute: typeof authSignInSplatRoute
  authSignUpSplatRoute: typeof authSignUpSplatRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authSignInSplatRoute: authSignInSplatRoute,
  authSignUpSplatRoute: authSignUpSplatRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface countdownRouteRouteChildren {
  countdownDashboardIndexRoute: typeof countdownDashboardIndexRoute
  countdownCountdownCountdownIdIndexRoute: typeof countdownCountdownCountdownIdIndexRoute
  countdownCountdownNewIndexRoute: typeof countdownCountdownNewIndexRoute
  countdownCountdownCountdownIdEditIndexRoute: typeof countdownCountdownCountdownIdEditIndexRoute
}

const countdownRouteRouteChildren: countdownRouteRouteChildren = {
  countdownDashboardIndexRoute: countdownDashboardIndexRoute,
  countdownCountdownCountdownIdIndexRoute:
    countdownCountdownCountdownIdIndexRoute,
  countdownCountdownNewIndexRoute: countdownCountdownNewIndexRoute,
  countdownCountdownCountdownIdEditIndexRoute:
    countdownCountdownCountdownIdEditIndexRoute,
}

const countdownRouteRouteWithChildren = countdownRouteRoute._addFileChildren(
  countdownRouteRouteChildren,
)

interface landingRouteRouteChildren {
  landingIndexRoute: typeof landingIndexRoute
}

const landingRouteRouteChildren: landingRouteRouteChildren = {
  landingIndexRoute: landingIndexRoute,
}

const landingRouteRouteWithChildren = landingRouteRoute._addFileChildren(
  landingRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  countdownRouteRoute: countdownRouteRouteWithChildren,
  landingRouteRoute: landingRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { startInstance } from './start.ts'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
    config: Awaited<ReturnType<typeof startInstance.getOptions>>
  }
}
