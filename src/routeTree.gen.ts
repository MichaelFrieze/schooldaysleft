/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as landingRouteRouteImport } from './routes/(landing)/route'
import { Route as landingIndexRouteImport } from './routes/(landing)/index'
import { Route as SignUpSplatRouteImport } from './routes/sign-up.$'
import { Route as SignInSplatRouteImport } from './routes/sign-in.$'

const landingRouteRoute = landingRouteRouteImport.update({
  id: '/(landing)',
  getParentRoute: () => rootRouteImport,
} as any)
const landingIndexRoute = landingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => landingRouteRoute,
} as any)
const SignUpSplatRoute = SignUpSplatRouteImport.update({
  id: '/sign-up/$',
  path: '/sign-up/$',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInSplatRoute = SignInSplatRouteImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof landingIndexRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
}
export interface FileRoutesByTo {
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/': typeof landingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(landing)': typeof landingRouteRouteWithChildren
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/(landing)/': typeof landingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/sign-in/$' | '/sign-up/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in/$' | '/sign-up/$' | '/'
  id: '__root__' | '/(landing)' | '/sign-in/$' | '/sign-up/$' | '/(landing)/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  landingRouteRoute: typeof landingRouteRouteWithChildren
  SignInSplatRoute: typeof SignInSplatRoute
  SignUpSplatRoute: typeof SignUpSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(landing)': {
      id: '/(landing)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(landing)/': {
      id: '/(landing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingIndexRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/sign-up/$': {
      id: '/sign-up/$'
      path: '/sign-up/$'
      fullPath: '/sign-up/$'
      preLoaderRoute: typeof SignUpSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/$': {
      id: '/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof SignInSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface landingRouteRouteChildren {
  landingIndexRoute: typeof landingIndexRoute
}

const landingRouteRouteChildren: landingRouteRouteChildren = {
  landingIndexRoute: landingIndexRoute,
}

const landingRouteRouteWithChildren = landingRouteRoute._addFileChildren(
  landingRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  landingRouteRoute: landingRouteRouteWithChildren,
  SignInSplatRoute: SignInSplatRoute,
  SignUpSplatRoute: SignUpSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
